/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Customer;



import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.sun.prism.paint.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class ManageCustomerWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatientWorkAreaPanel
     */
   
   
        JPanel userProcessContainer;
       
        String custName=null;
        enum status{
            Pending
        }
    
    public ManageCustomerWorkAreaPanel(JPanel userProcessContainer,String custName) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.custName = custName;
         
        patientTable.getTableHeader().setFont(new Font("TImes New Roman",Font.BOLD,18));
        patientTable.setRowHeight(30);
        patientTable.setRowMargin(10);
        populateTable();
        ManagerLabelName.setText("Hello Customer:"+custName);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
//    private void populateDoctorCombo(){
//        DoctorComboBox.removeAllItems();
//        for(HealthDepartment hel:health.getDetails()){
//            if(hel.getRole().equals("Doctor")){
//                DoctorComboBox.addItem(hel.getEmp_id()+"-"+hel.getUser_name());   
//            }
//        }
//    }
     private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel(); 
        MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("TestDB");
        DBCollection userCollection = db.getCollection("Customers");
        DBCursor cursor = null;
        cursor = userCollection.find();
        model.setRowCount(0);
        String vaccineStatus = "";
        while(cursor.hasNext()){
            Object[] row = new Object[model.getColumnCount()];
            DBObject obj = cursor.next();
            if(obj.get("userName").toString().equals(custName)){
                List<DBObject> list = (List)obj.get("vaccineInfo");
                for(DBObject object:list){
                    row[0] = obj.get("_id");
                    vaccineStatus = object.get("vaccineStatus").toString();
                    row[1] = object.get("vaccineName");
                    row[2] = object.get("vaccineStatus");
                    row[3] = obj.get("registrationDate");
                    
                    model.addRow(row);
                }                
            }
            
        }
        if(vaccineStatus.equals("Pending")){
            JOptionPane.showMessageDialog(null, "You have Pending Vaccines. Please get vaccinated soon");
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        imgLabel = new javax.swing.JLabel();
        ManagerLabelName = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        patientTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Vaccine", "Status", "Registration Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setRowHeight(20);
        jScrollPane1.setViewportView(patientTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(280, 160, 890, 220);

        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(imgLabel);
        imgLabel.setBounds(620, 650, 940, 170);

        ManagerLabelName.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        ManagerLabelName.setText("jLabel2");
        add(ManagerLabelName);
        ManagerLabelName.setBounds(50, 50, 400, 40);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ManagerLabelName;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientTable;
    // End of variables declaration//GEN-END:variables
}
