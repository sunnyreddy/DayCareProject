/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Employee;

import Business.Analytics.NetworkAnalytics;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.HashMap;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author medas
 */
public class AnalyticsReportsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnalyticsReportsJPanel
     */
    private JPanel userProcessContainer;
    public AnalyticsReportsJPanel(JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        populateVaccinesGraph();
        populatePendingGraph();
    }
    
    private void populateVaccinesGraph(){

        HashMap<String,Integer> datamap = new NetworkAnalytics().getVaccinationDetails();
        DefaultPieDataset dataset = new DefaultPieDataset( );
        for(String ent : datamap.keySet()){
            dataset.setValue(ent, datamap.get(ent));
            String top = "Our Day Care Org";
            pieChart(dataset,"Completed Vaccines Percentages");
        }
    }
    
    private void populatePendingGraph(){

        HashMap<String,Integer> datamap = new NetworkAnalytics().getPendingDetails();
        DefaultPieDataset dataset = new DefaultPieDataset( );
        for(String ent : datamap.keySet()){
            dataset.setValue(ent, datamap.get(ent));
            String top = "Our Day Care Org";
            pieChart1(dataset,"Pending Vaccine Percentages");
        }
    }
    
    private void pieChart(DefaultPieDataset dataset,String tHeader){
        JFreeChart chart = ChartFactory.createPieChart3D(
        tHeader, // Title
        dataset, // Dataset
        true, // Show Legend
        true, // Use tooltips
        false // Configure chart to generate URLs?
        );
        
        pieplotJPanel.removeAll();
        pieplotJPanel.setLayout(new java.awt.BorderLayout());
        ChartPanel CP = new ChartPanel(chart);
        pieplotJPanel.add(CP,BorderLayout.CENTER);
        pieplotJPanel.validate();
    }
    
    private void pieChart1(DefaultPieDataset dataset,String tHeader){
        JFreeChart chart = ChartFactory.createPieChart3D(
        tHeader, // Title
        dataset, // Dataset
        true, // Show Legend
        true, // Use tooltips
        false // Configure chart to generate URLs?
        );
        
        pieplotJPanel1.removeAll();
        pieplotJPanel1.setLayout(new java.awt.BorderLayout());
        ChartPanel CP = new ChartPanel(chart);
        pieplotJPanel1.add(CP,BorderLayout.CENTER);
        pieplotJPanel1.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        pieplotJPanel = new javax.swing.JPanel();
        pieplotJPanel1 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(204, 204, 255));

        backBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backBtn.setText("<< back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pieplotJPanelLayout = new javax.swing.GroupLayout(pieplotJPanel);
        pieplotJPanel.setLayout(pieplotJPanelLayout);
        pieplotJPanelLayout.setHorizontalGroup(
            pieplotJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );
        pieplotJPanelLayout.setVerticalGroup(
            pieplotJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pieplotJPanel1Layout = new javax.swing.GroupLayout(pieplotJPanel1);
        pieplotJPanel1.setLayout(pieplotJPanel1Layout);
        pieplotJPanel1Layout.setHorizontalGroup(
            pieplotJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );
        pieplotJPanel1Layout.setVerticalGroup(
            pieplotJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(pieplotJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pieplotJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(backBtn)
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pieplotJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pieplotJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(162, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EmployeeWorkAreaJPanel empwjp = (EmployeeWorkAreaJPanel) component;
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel pieplotJPanel;
    private javax.swing.JPanel pieplotJPanel1;
    // End of variables declaration//GEN-END:variables
}
